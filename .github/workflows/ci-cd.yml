name: CI/CD Pipeline

on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Start Minikube
        uses: medyagh/setup-minikube@v0.0.14

      - name: Use Minikube Docker daemon
        run: eval $(minikube docker-env)

      - name: Build Docker Images
        run: |
          docker build -t agent-service:latest -f microservices/agent-service/Dockerfile microservices/agent-service
          docker build -t notification-service:latest -f microservices/notification-service/Dockerfile microservices/notification-service
          docker build -t sales-integration-service:latest -f microservices/sales-integration-service/Dockerfile microservices/sales-integration-service

      - name: Setup kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/v1.29.0/bin/linux/amd64/kubectl"
          chmod +x kubectl && sudo mv kubectl /usr/local/bin/

      - name: Deploy to Minikube (Blue)
        run: |
          kubectl apply -f k8s/namespace.yaml
          kubectl apply -f k8s/configmap.yaml
          kubectl apply -f k8s/secret.yaml
          kubectl apply -f k8s/agent-service.yaml
          kubectl apply -f k8s/notification-service.yaml
          kubectl apply -f k8s/sales-integration-service.yaml
          # kubectl apply -f k8s/aggregator-job.yaml
          kubectl apply -f k8s/ingress.yaml

      - name: Waiting for ingress controller pods to be ready
        run: |
          kubectl get pods -n kube-system

      - name: Apply ingress
        run: kubectl apply -f k8s/ingress.yaml

      # - name: Show pods status
      #   run: kubectl get pods -n cmm707-microservices -o wide
        
      # - name: Describe agent-service pod
      #   run: |
      #       POD=$(kubectl get pods -n cmm707-microservices -l app=agent-service -o jsonpath="{.items[0].metadata.name}")
      #       kubectl describe pod $POD -n cmm707-microservices
        
      # - name: Show logs for agent-service
      #   run: |
      #       POD=$(kubectl get pods -n cmm707-microservices -l app=agent-service -o jsonpath="{.items[0].metadata.name}")
      #       kubectl logs $POD -n cmm707-microservices

      # - name: Wait for all pods to be ready
      #   run: |
      #     kubectl wait --for=condition=ready pod -l app=agent-service -n cmm707-microservices --timeout=60s
      #     kubectl wait --for=condition=ready pod -l app=sales-integration-service -n cmm707-microservices --timeout=60s
      #     kubectl wait --for=condition=ready pod -l app=notification-service -n cmm707-microservices --timeout=60s
            
      - name: Port forward services
        run: |
          kubectl port-forward -n cmm707-microservices service/agent-service 8000:8000 &
          kubectl port-forward -n cmm707-microservices service/sales-integration-service 8001:8001 &
          kubectl port-forward -n cmm707-microservices service/notification-service 8002:8002 &
          sleep 5

          - name: Show pods status
          run: kubectl get pods -n cmm707-microservices -o wide
          
      - name: Describe pods
        run: |
              $pods = kubectl get pods -n cmm707-microservices --no-headers -o custom-columns=":metadata.name"
              foreach ($pod in $pods) {
                  Write-Host "`n=== Logs for $pod ==="
                  kubectl describe $pod -n cmm707-microservices
                  }
      - name: Show logs
        run: |
              $pods = kubectl get pods -n cmm707-microservices --no-headers -o custom-columns=":metadata.name"
              foreach ($pod in $pods) {
                Write-Host "`n=== Logs for $pod ==="
                kubectl logs $pod -n cmm707-microservices
              }

      - name: Integration Tests
        run: |
          chmod +x scripts/run-tests.sh
          ./scripts/run-tests.sh

      - name: Clean up Minikube
        if: always()
        run: minikube delete
